@page "/manageaccountholders"
@using Microsoft.AspNetCore.Components.QuickGrid;
@rendermode InteractiveServer
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Net.Http.Headers
@using FinancialPlanner.Components.Models;
@using FinancialPlanner.Services;
@inject NavigationManager NavigationManager
@inject IHttpClientFactory ClientFactory
@inject IAccountHolderService AccountHolderService
@attribute [StreamRendering(true)]


@if (getAccountHoldersError || this.accountHolders is null)
{
    <p>Unable to get account holders. Please try again later.</p>
}
else
{
    <small><table class="table" width="100%">
        <thead>
            <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Date Of Birth</th>
                    <th>Account Staring Balance</th>
                    <th>Retirement Age</th>
                    <th>Expected Monthly Retirement Income</th>
                    <th>Pre Retirement Monthly Savings Contribution</th>
                    <th>Social Security Payout Age</th>
                    <th>Financial Events</th>
            </tr>
        </thead>
        <tbody>
            @if(AccountHolderService.AccountHolders != null)
                @foreach (var accountHolder in AccountHolderService.AccountHolders)
            {
                <tr>
                    <td>@accountHolder.FirstName</td>
                    <td>@accountHolder.LastName</td>
                    <td>@accountHolder.DateOfBirth</td>
                    <td>@accountHolder.AccountStartingBalance</td>
                    <td>@accountHolder.Scenarios[0].RetirementAge</td>
                    <td>@accountHolder.Scenarios[0].ExpectedMonthlyRetirementIncome</td>
                    <td>@accountHolder.Scenarios[0].PreRetirementMonthlySavingsContribution</td>
                    <td>@accountHolder.Scenarios[0].SocialSecurityPayoutAge</td>
                    <td>@accountHolder.FinancialEvents.Count</td>
                    <button class="btn btn-primary" @onclick="(() => ShowAccountHolder(accountHolder.id))"><i class="oi oi-pencil"></i></button>
                </tr>
            }
        </tbody>
    </table></small>


}


@code {
    private bool shouldRender;

    private IEnumerable<AccountHolder>? accountHolders = Array.Empty<AccountHolder>();

    private bool getAccountHoldersError;
    private string accountHolderName;


    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        await AccountHolderService.GetAccountHolders();

        shouldRender = true;
    }

    void ShowAccountHolder(string id)
    {
        NavigationManager.NavigateTo($"accountholderedit/{id}");
    }

    void CreateNewAccountHolder()
    {
        NavigationManager.NavigateTo("/accountholderedit");
    }
}